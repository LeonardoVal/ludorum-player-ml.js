{"version":3,"sources":["../src/__prologue__.js","../src/core.js","../src/players.js","../src/classifiers.js","../src/__epilogue__.js"],"names":[],"mappings":"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","file":"ludorum-player-ml.js","sourcesContent":["/** Library ludorum-classifier-player wrapper and layout.\n*/\nfunction __init__(base, Sermat, ludorum){ \"use strict\";\n\n// Import synonyms. ////////////////////////////////////////////////////////////////////////////////\n\tvar declare = base.declare,\n\t\traiseIf = base.raiseIf,\n\t\titerable = base.iterable,\n\t\tIterable = base.Iterable,\n\t\tunimplemented = base.objects.unimplemented,\n\t\tinitialize = base.initialize,\n\n\t\tPlayer = ludorum.Player,\n\t\tHeuristicPlayer = ludorum.players.HeuristicPlayer;\n\n// Library layout. /////////////////////////////////////////////////////////////////////////////////\n\tvar exports = {\n\t\t__package__: 'ludorum-classifier-player',\n\t\t__name__: 'ludorum_classifier_player',\n\t\t__init__: __init__,\n\t\t__dependencies__: [base, Sermat, ludorum]\n\t};\n\n// See __epilogue__.js\n","/** # Core definitions.\n\n\n*/\n\n/** ## Game model ##################################################################################\n\nA game model provides the necessary metadata to process the state of a game with a classifier.\n*/\nvar GameModel = exports.GameModel = declare({\n\tconstructor: function GameModel(game) {\n\t\tthis.game = game;\n\t},\n\n\t/** Classifiers that use the game's actions as classes must know the set of all possible\n\tactions that any player can make in any possible game state.\n\t*/\n\tpossibleActions: function possibleActions() {\n\t\treturn this.__possibleActions__;\n\t},\n\n\t/** Classifiers that use the game's results as classes must know the set of all posible results\n\tthat any possible match can end with for all players.\n\t*/\n\t__possibleResults__: [-1, 0, 1],\n\n\tpossibleResults: function possibleResults() {\n\t\treturn this.__possibleResults__;\n\t},\n\n\t/** Classifiers take as inputs a set of features that describe every possible game state. Every\n\tfeature is a number, within a given range. In order to execute a classifier, the list of\n\t`features` must be calculated from a given `game` state. Usually these values also change\n\tdepending on the perspective of the `player`.\n\t*/\n\tfeatures: unimplemented('GameModel', 'feature(game, player)'),\n\n\t/** In order to properly build a classifier, the amount of features and their possible values\n\t(i.e. their ranges) must be known.\n\t*/\n\tfeatureRanges: function featureRanges() {\n\t\treturn this.__featureRanges__;\n\t},\n\n\t/** Some classifiers use the features as they are calculated. Others may need to normalize\n\tthese values. By default features are normalized in the [0, 1] range.\n\t*/\n\tnormalizedFeatures: function normalizedFeatures(game, player, min, max) {\n\t\tmin = isNaN(min) ? 0 : +min;\n\t\tmax = isNaN(max) ? 1 : +max;\n\t\tvar d = max - min;\n\t\treturn Iterable.zip(this.features(game, player), this.featureRanges())\n\t\t\t.mapApply(function (f, r) {\n\t\t\t\treturn (f - r.min) / (r.max - r.min) * d + min;\n\t\t\t}).toArray();\n\t}\n}); // declare GameModel\n\n/** ## Game classifier #############################################################################\n\nA game classifier is a classifier that takes its inputs from a game state and a player. The outputs\n(classes) can be different concepts, depending on the way the classifier is meant to be used.\n*/\nvar GameClassifier = exports.GameClassifier = declare({\n\t/** All classifiers are defined by a list of numerical `parameters`.\n\t*/\n\tconstructor: function Classifier(parameters) {\n\t\tvar parameterRanges = this.parameterRanges;\n\t\traiseIf(parameters.length !== parameterRanges.length, \"Expected \", parameterRanges.length,\n\t\t\t\" parameters, but got \", parameters.length, \"!\");\n\t\tIterable.zip(parameters, parameterRanges).forEachApply(function (p, r, i) {\n\t\t\traiseIf(p < r.min || p > r.max, \"Value \", p, \" for parameter \", i, \" not in range [\",\n\t\t\t\tr.min, \",\", r.max, \"]!\");\n\t\t});\n\t},\n\n\t/** The base `GameClassifier` type is not meant to be used, but rather to be extended. Subtypes\n\tmust provide three definitions in their prototypes:\n\n\t\t+ `gameModel` is used to calculate features and other information from game states.\n\t*/\n\tgameModel: null,\n\n\t/**\t+ `parameterRanges` is a list of ranges (e.g. `{min:0, max:1}`) for the parameters\n\t\trequired to build a classifier of this type.\n\t*/\n\tparameterRanges: [],\n\n\t/**\t+ `classes` is a list of values, each belonging to one of the classes in which the game\n\t\tstates are supposed to be classified.\n\t*/\n\tclasses: [null],\n\n\t/** All classifiers may need a pseudo-random number generator in one way or another.\n\t*/\n\trandom: base.Randomness.DEFAULT,\n\n\t/** To `evaluate` a classifier is to calculate a list of pairs `[class, n]`, where `n` is a\n\tnumerical evaluation of the membership of the given `game` state to the corresponding `class`.\n\tThe greater the evaluation, the most likely the game state is to belong to the class.\n\t*/\n\tevaluate: function evaluate(game, player) {\n\t\tvar random = this.random;\n\t\treturn this.classes.map(function (clazz) {\n\t\t\treturn [clazz, random.random()];\n\t\t});\n\t},\n\n\t/** The normalization makes the evaluations for all classes fit in the [0,1] range, adding up\n\tto 1. \n\t*/\n\tnormalizedEvaluate: function normalizedEvaluate(game, player) {\n\t\tvar evals = iterable(this.evaluate(game, player)),\n\t\t\tmin = +Infinity,\n\t\t\tmax = -Infinity,\n\t\t\tsum = 0,\n\t\t\tcount = 0;\n\t\tevals.forEachApply(function (i, v) {\n\t\t\tif (min > v) {\n\t\t\t\tmin = v;\n\t\t\t}\n\t\t\tif (max < v) {\n\t\t\t\tmax = v;\n\t\t\t}\n\t\t\tsum += v;\n\t\t\tcount++;\n\t\t});\n\t\tsum = sum - count * min;\n\t\treturn evals.mapApply(function (i, v) {\n\t\t\treturn [i, (v - min) / sum];\n\t\t}).toArray();\n\t},\n\n\t/** To `classify` a `game` state is to pick the class with greater evaluation. If more than one\n\thas the greatest evaluation, one of these is chosen at random.\n\t*/\n\tclassify: function classify(game, player) {\n\t\tvar classes = this.classes,\n\t\t\tselected = iterable(this.evaluate(game, player)).greater(function (clazz) {\n\t\t\t\treturn clazz[1];\n\t\t\t}).map(function (clazz) {\n\t\t\t\treturn classes[clazz[0]];\n\t\t\t});\n\t\treturn this.random.choice(selected);\n\t},\n\n\t/** An `actionClassifier` is a game classifier that uses the game's possible actions as the\n\tclasses into which classify any game state.\n\t*/\n\t'static actionClassifier': unimplemented('GameClassifier',\n\t\t'static actionClassifier(gameModel)'),\n\n\t/** An `resultClassifier` is a game classifier that uses the game's possible results as the\n\tclasses into which classify any game state.\n\t*/\n\t'static resultClassifier': unimplemented('GameClassifier',\n\t\t'static resultClassifier(gameModel, possibleResults)')\n}); // declare GameClassifier\n","/** # Players\n\nPlayers based on classifiers can be built in many ways, and also combined with other algorithms like\nMCTS or MiniMax.\n*/\n\n/** ## Action classifier player ####################################################################\n\n`ActionClassifierPlayer`s are simple players that use the given classifier to directly choose the\naction to make. The game `classifier` must be set up to use the game's possible actions as the\nclasses into which classify any game state.\n*/\nvar ActionClassifierPlayer = exports.ActionClassifierPlayer = declare(Player, {\n\tconstructor: function ActionClassifierPlayer(params) {\n\t\tPlayer.call(this, params);\n\t\tthis.classifier = params.classifier;\n\t},\n\n\t/** To make a `decision`, the given `game` state is evaluated by the player's `classifier`. All\n\tnon-viable actions are removed. The best evaluated viable actions is selected. If more than one\n\thas the best score, one of the best evaluated is selected randomly.\n\t*/\n\tdecision: function decision(game, role) {\n\t\tvar validMoves = game.moves()[role],\n\t\t\tclassifier = this.classifier,\n\t\t\tclasses = classifier.classes,\n\t\t\tselected = iterable(classifier.evaluate(game, role)).filter(function (c) {\n\t\t\t\t\treturn validMoves.indexOf(classes[c[0]]) >= 0;\n\t\t\t\t}).greater(function (c) {\n\t\t\t\t\treturn c[1];\n\t\t\t\t}).map(function (c) {\n\t\t\t\t\treturn classes[c[0]];\n\t\t\t\t});\n\t\treturn classifier.random.choice(selected);\n\t}\n}); // declare ActionClassifierPlayer\n\n/** ## Result classifier player ####################################################################\n\n`ResultClassifierPlayer`s are simple players that use the given classifier to directly choose the\naction to make. The game `classifier` must be set up to use the game's possible actions as the\nclasses into which classify any game state.\n*/\nvar ResultClassifierPlayer = exports.ResultClassifierPlayer = declare(HeuristicPlayer, {\n\tconstructor: function ResultClassifierPlayer(params) {\n\t\tHeuristicPlayer.call(this, params);\n\t\tthis.classifier = params.classifier;\n\t},\n\n\t/** Heuristic functions based on result classifiers return a normalized weighted average of the\n\tclassifier's evaluation. Each class is assumed to have a numerical value.\n\t*/\n\t'static heuristic': function (classifier, game, role) {\n\t\tvar resultBounds = game.resultBounds(),\n\t\t\tdivisor = Math.max(Math.abs(resultBounds[0]), Math.abs(resultBounds[1])) * 1.1,\n\t\t\tclasses = classifier.classes,\n\t\t\tevals = classifier.normalizedEvaluate(game, role),\n\t\t\tresult = iterable(evals).map(function (c) {\n\t\t\t\treturn classes[c[0]] * c[1];\n\t\t\t}).sum() / divisor;\n\t\treturn result;\n\t},\n\n\theuristic: function (game, player) {\n\t\treturn this.constructor.heuristic(this.classifier, game, player);\n\t}\n}); // declare ResultClassifierPlayer\n\n//TODO Move filter with action classifier.\n","/** # Classifiers\n\nThis library provides the following types of classifiers.\n*/\n\n/** ## Linear classifier ###########################################################################\n\nA [linear classifier](https://en.wikipedia.org/wiki/Linear_classifier) selects a class for an\ngame state based on a linear combination of its features.\n*/\nvar LinearClassifier = exports.LinearClassifier = declare(GameClassifier, {\n\tconstructor: function LinearClassifier(parameters) {\n\t\tGameClassifier.call(this, parameters);\n\t\tvar featureCount = this.gameModel.featureRanges().length;\n\t\tthis.__parameters__ = Iterable.range(this.classes.length).map(function (i) {\n\t\t\treturn parameters.slice(i * featureCount, (i + 1) * featureCount);\n\t\t}).toArray();\n\t},\n\n\t/** Every class has a vector with a weight for every feature. A linear classifier is evaluated\n\tby calculating the product of this weight vector and the feature vector for every class.\n\t*/\n\tevaluate: function evaluate(game, player) {\n\t\tvar features = this.gameModel.normalizedFeatures(game, player);\n\t\treturn iterable(this.__parameters__).map(function (params, i) {\n\t\t\t\tvar r = Iterable.zip(params, features).mapApply(function (w, x) {\n\t\t\t\t\treturn w * x;\n\t\t\t\t}).sum();\n\t\t\t\treturn [i, r];\n\t\t\t}).toArray();\n\t},\n\n\t/** An action classifier based on a linear classifier has as many parameters as the product of\n\tthe feature count by the class count, i.e. the amount of possible actions in the game model.\n\t*/\n\t'static actionClassifier': function actionClassifier(gameModel) {\n\t\tvar featureCount = gameModel.featureRanges().length,\n\t\t\tclasses = gameModel.possibleActions(),\n\t\t\tparamCount = featureCount * classes.length;\n\t\treturn declare(this, {\n\t\t\tgameModel: gameModel,\n\t\t\tclasses: classes,\n\t\t\tparameterRanges: Iterable.repeat({ min: -1, max: +1 }, paramCount).toArray(),\n\n\t\t\t/** The player used by the linear action classifier is `ActionClassifierPlayer`.\n\t\t\t*/\n\t\t\tplayer: function player(params) {\n\t\t\t\treturn new ActionClassifierPlayer(Object.assign(params || {}, {\n\t\t\t\t\tclassifier: this\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t},\n\n\t/** A result classifier based on a linear classifier has as many parameters as the product of\n\tthe feature count by the class count, i.e. the amount of possible results in the game model.\n\t*/\n\t'static resultClassifier': function resultClassifier(gameModel, possibleResults) {\n\t\tvar featureCount = gameModel.featureRanges().length,\n\t\t\tclasses = possibleResults || gameModel.possibleResults(),\n\t\t\tparamCount = featureCount * classes.length;\n\t\treturn declare(this, {\n\t\t\tgameModel: gameModel,\n\t\t\tclasses: classes,\n\t\t\tparameterRanges: Iterable.repeat({ min: -1, max: +1 }, paramCount).toArray(),\n\n\t\t\t/** If an `horizon` parameter is given, the player used by the linear result\n\t\t\tclassifier is an `AlphaBetaPlayer` with an heuristic that uses the classifier. Else\n\t\t\tthe `ResultClassifierPlayer` is used.\n\t\t\t*/\n\t\t\tplayer: function player(params) {\n\t\t\t\tparams = Object.assign(params || {}, {\n\t\t\t\t\tclassifier: this\n\t\t\t\t});\n\t\t\t\tif (params.horizon) {\n\t\t\t\t\tparams.heuristic = ResultClassifierPlayer.heuristic.bind(null, this);\n\t\t\t\t\treturn new ludorum.players.AlphaBetaPlayer(params);\n\t\t\t\t}\n\t\t\t\treturn new ResultClassifierPlayer(params);\n\t\t\t}\n\t\t});\n\t}\n}); // declare LinearClassifier\n","// See __prologue__.js\n\n\treturn exports;\n}"]}