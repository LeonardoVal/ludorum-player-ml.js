//! ludorum-player-ml 0.0.1

(function(a){"use strict";"function"==typeof define&&define.amd?define(["creatartis-base","sermat","ludorum"],a):"object"==typeof exports&&module.exports?module.exports=a(require("creatartis-base"),require("sermat"),require("ludorum")):this.Sermat=a(this.base,this.Sermat,this.ludorum)}).call(this,function a(b,c,d){"use strict";var e=b.declare,f=b.raiseIf,g=b.iterable,h=b.Iterable,i=b.objects.unimplemented,j=b.initialize,k=d.Player,l=d.players.HeuristicPlayer,m={__package__:"ludorum-classifier-player",__name__:"ludorum_classifier_player",__init__:a,__dependencies__:[b,c,d]},n=(m.GameModel=e({constructor:function(a){this.game=a},possibleActions:function(){return this.__possibleActions__},__possibleResults__:[-1,0,1],possibleResults:function(){return this.__possibleResults__},features:i("GameModel","feature(game, player)"),featureRanges:function(){return this.__featureRanges__},normalizedFeatures:function(a,b,c,d){c=isNaN(c)?0:+c,d=isNaN(d)?1:+d;var e=d-c;return h.zip(this.features(a,b),this.featureRanges()).mapApply(function(a,b){return(a-b.min)/(b.max-b.min)*e+c}).toArray()},customizeAction:function(a,b,c){return a}}),m.GameClassifier=e({constructor:function(a){var b=this.parameterRanges;f(a.length!==b.length,"Expected ",b.length," parameters, but got ",a.length,"!"),h.zip(a,b).forEachApply(function(a,b,c){f(a<b.min||a>b.max,"Value ",a," for parameter ",c," not in range [",b.min,",",b.max,"]!")})},gameModel:null,parameterRanges:[],classes:[null],random:b.Randomness.DEFAULT,evaluate:function(a,b){var c=this.random;return this.classes.map(function(a){return[a,c.random()]})},normalizedEvaluate:function(a,b){var c=g(this.evaluate(a,b)),d=+(1/0),e=-(1/0),f=0,h=0;return c.forEachApply(function(a,b){d>b&&(d=b),e<b&&(e=b),f+=b,h++}),f-=h*d,c.mapApply(function(a,b){return[a,(b-d)/f]}).toArray()},classify:function(a,b){var c=this.classes,d=g(this.evaluate(a,b)).greater(function(a){return a[1]}).map(function(a){return c[a[0]]});return this.random.choice(d)},"static actionClassifier":function(a,b,c){return f("function"!=typeof a,"Invalid ClassifierType!"),f(!c,"Invalid parameterRanges!"),e(a,{gameModel:b,classes:b.possibleActions(),parameterRanges:c,player:function(a){return new o(Object.assign(a||{},{classifier:this}))}})},"static resultClassifier":function(a,b,c,g){return f("function"!=typeof a,"Invalid ClassifierType!"),f(!c,"Invalid parameterRanges!"),e(a,{gameModel:b,classes:g||b.possibleResults(),parameterRanges:c,player:function(a){return a=Object.assign(a||{},{classifier:this}),a.hasOwnProperty("horizon")?(a.heuristic=p.heuristic.bind(null,this),new d.players.AlphaBetaPlayer(a)):new p(a)}})}})),o=m.ActionClassifierPlayer=e(k,{constructor:function(a){k.call(this,a),this.classifier=a.classifier},decision:function(a,b){var c=a.moves()[b],d=this.classifier,e=d.gameModel,f=d.classes,h=g(d.evaluate(a,b)).map(function(c){return[e.customizeAction(f[c[0]],a,b),c[1]]}).filter(function(a){return c.indexOf(a[0])>=0}).greater(function(a){return a[1]}).map(function(a){return a[0]});return d.random.choice(h)}}),p=m.ResultClassifierPlayer=e(l,{constructor:function(a){l.call(this,a),this.classifier=a.classifier},"static heuristic":function(a,b,c){var d=b.resultBounds(),e=1.1*Math.max(Math.abs(d[0]),Math.abs(d[1])),f=a.classes,h=a.normalizedEvaluate(b,c),i=g(h).map(function(a){return f[a[0]]*a[1]}).sum()/e;return i},heuristic:function(a,b){return this.constructor.heuristic(this.classifier,a,b)}});m.LinearClassifier=e(n,{constructor:function(a){n.call(this,a);var b=this.gameModel.featureRanges().length;this.__parameters__=h.range(this.classes.length).map(function(c){return a.slice(c*b,(c+1)*b)}).toArray()},evaluate:function(a,b){var c=this.gameModel.normalizedFeatures(a,b);return g(this.__parameters__).map(function(a,b){var d=h.zip(a,c).mapApply(function(a,b){return a*b}).sum();return[b,d]}).toArray()},"static actionClassifier":function(a){var b=a.featureRanges().length,c=a.possibleActions(),d=b*c.length;return n.actionClassifier(this,a,h.repeat({min:-1,max:1},d).toArray())},"static resultClassifier":function(a,b){var c=a.featureRanges().length,d=b||a.possibleResults(),e=c*d.length;return n.actionClassifier(this,a,h.repeat({min:-1,max:1},e).toArray(),b)}});return m.training={init:function(a){var c=a.Problem,f=(d.players.RandomPlayer,d.tournaments.Measurement);return this.TrainingProblem=e(c,{random:b.Randomness.DEFAULT,objectives:[+(1/0)],precision:100,matchCount:30,constructor:function(a){j(this,a).func("ClassifierType").integer("precision",{coerce:!0,ignore:!0}).integer("matchCount",{coerce:!0,ignore:!0}).array("opponents",{ignore:!0});var b=this.precision,d=this.ClassifierType.prototype.parameterRanges;this.ClassifierType.prototype.gameModel.game;c.call(this,Object.assign(a,{title:"TrainingProblem for "+this.ClassifierType,description:"Training method based on inveniemus for "+this.ClassifierType,elementModel:d.map(function(a){return{n:(a.max-a.min)*b+1}})})),this.Element.prototype.emblem=function(){var a=null===this.evaluation?"⊥":this.evaluation.map(function(a){return Math.round(1e4*a)/1e4}).join(","),b=this.values().map(function(a){return String.fromCharCode((0|a)+19904)}).join("");return"[Element "+a+" "+b+"]"}},opponents:[new d.players.RandomPlayer({name:"Random"}),new d.players.AlphaBetaPlayer({name:"ΑΒ(h1)",horizon:0}),new d.players.AlphaBetaPlayer({name:"ΑΒ(h2)",horizon:1}),new d.players.AlphaBetaPlayer({name:"ΑΒ(h3)",horizon:2}),new d.players.AlphaBetaPlayer({name:"ΑΒ(h4)",horizon:3})],mapping:function(a){var b=this.precision,c=this.ClassifierType.prototype.parameterRanges,d=h.zip(a.values(),c).mapApply(function(a,c){return Math.max(c.min,Math.min(c.max,a/b*(c.max-c.min)+c.min))}).toArray();return new this.ClassifierType(d)},player:function(a){return a.player({name:"Trainee"})},evaluation:function(a){var b=this.ClassifierType.prototype.gameModel.game,c=this.mapping(a),d=this.player(c),e=new f(b,[d],this.opponents,this.matchCount);return e.run().then(function(){var a=e.statistics;return[a.average({key:"results",player:d.name})]})}}),this}},m});
//# sourceMappingURL=ludorum-player-ml.min.js.map