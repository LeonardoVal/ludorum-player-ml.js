//! ludorum-player-ml 0.0.1

(function(a){"use strict";"function"==typeof define&&define.amd?define(["creatartis-base","sermat","ludorum"],a):"object"==typeof exports&&module.exports?module.exports=a(require("creatartis-base"),require("sermat"),require("ludorum")):this["ludorum-player-ml"]=a(this.base,this.Sermat,this.ludorum)}).call(this,function a(b,c,d){"use strict";var e=b.declare,f=b.raiseIf,g=b.iterable,h=b.Iterable,i=b.objects.unimplemented,j=b.initialize,k=d.Player,l=d.players.HeuristicPlayer,m={__package__:"ludorum-player-ml",__name__:"ludorum_player_ml",__init__:a,__dependencies__:[b,c,d]},n=m.models={},o=m.classifiers={},p=m.players={},q=m.training={},s=m.GameModel=e({constructor:function(a){j(this,a).object("game",{ignore:!0})},actionClasses:function(a){return a=a||this.game,a.moves()[a.activePlayer()]},actionForClass:function(a,b,c){return a},resultClasses:function(a){return a=a||this.game,b.Iterable.chain([0],a.resultBounds()).sorted().toArray()},resultForClass:function(a,b,c){return a},features:i("GameModel","feature(game, player)"),featureRanges:i("GameModel","featureRanges(game)"),normalizedFeatures:function(a,b,c,d){c=isNaN(c)?0:+c,d=isNaN(d)?1:+d;var e=d-c;return h.zip(this.features(a,b),this.featureRanges()).mapApply(function(a,b){return(a-b.min)/(b.max-b.min)*e+c}).toArray()}});n.TicTacToeGameModel=b.declare(s,{constructor:function(a){a=a||{},a.game=a.game||new d.games.TicTacToe,s.call(this,a)},actionClasses:function(a){return[0,1,2,3,4,5,6,7,8]},__featureRanges__:b.Iterable.repeat({min:-1,max:1},9).toArray(),featureRanges:function(){return this.__featureRanges__},features:function(a,b){var c=a.players.map(function(a){return a.charAt(0)}),d=b===c[0]?1:-1;return a.board.split("").map(function(a){return a===c[0]?d:a===c[1]?-d:0})}});var t=m.GameClassifier=e({constructor:function(a){j(this,a).object("gameModel",{ignore:!0}).array("classes",{ignore:!0}).object("random",{ignore:!0})},gameModel:null,classes:[],random:b.Randomness.DEFAULT,classify:function(a,b){return this.classify_randomMatch(a,b)},classify_firstMatch:function(a,b){var c=this.matches(a,b);return c.length>0?c[0]:null},classify_randomMatch:function(a,b){var c=this.matches(a,b);return c.length>0?this.random.choice(c):null},matches:function(a,b){return this.classes},match_bestEvaluated:function(a,b){var c=this.classes;return g(this.evaluate(a,b)).greater(function(a){return a[1]}).map(function(a){return c[a[0]]})},evaluate:function(a,b){var c=this.random;return this.classes.map(function(a){return[a,c.random()]})},normalizedEvaluate:function(a,b){var c=g(this.evaluate(a,b)),d=+(1/0),e=-(1/0),f=0,h=0;return c.forEachApply(function(a,b){d>b&&(d=b),e<b&&(e=b),f+=b,h++}),f-=h*d,c.mapApply(function(a,b){return[a,(b-d)/f]}).toArray()},"static actionClassifier":function(a){var c=a.gameModel||this.prototype.gameModel;return f(!c,"Game model not provided!"),a=b.copy({},a,{classes:c.actionClasses(),player:function(a){return a=b.copy({},a,{classifier:this}),new v(a)}}),e(this,a)},"static resultClassifier":function(a){var c=a.gameModel||this.prototype.gameModel;return f(!c,"Game model not provided!"),a=b.copy({},a,{classes:c.resultClasses(),player:function(a){return a=b.copy({},a,{classifier:this}),a.hasOwnProperty("horizon")?(a.heuristic=w.heuristic.bind(null,this),new d.players.AlphaBetaPlayer(a)):new w(a)}}),e(this,a)}}),u=o.ParametricalGameClassifier=e(t,{constructor:function(a){t.call(this,a);var b=this.parameterRanges,c=a.parameters||[];f(c.length!==b.length,"Expected ",b.length," parameters, but got ",c.length,"!"),h.zip(c,b).forEachApply(function(a,b,c){f(a<b.min||a>b.max,"Value ",a," for parameter ",c," not in range [",b.min,",",b.max,"]!")}),this.parameters=c},parameterRanges:[],matches:t.prototype.match_bestEvaluated,"static actionClassifier":function(a,b,c){return f("function"!=typeof a,"Invalid ClassifierType!"),f(!c,"Invalid parameterRanges!"),e(a,{gameModel:b,classes:b.actionClasses(),parameterRanges:c,player:function(a){return new v(Object.assign(a||{},{classifier:this}))}})},"static resultClassifier":function(a,b,c,g){return f("function"!=typeof a,"Invalid ClassifierType!"),f(!c,"Invalid parameterRanges!"),e(a,{gameModel:b,classes:g||b.resultClasses(),parameterRanges:c,player:function(a){return a=Object.assign(a||{},{classifier:this}),a.hasOwnProperty("horizon")?(a.heuristic=w.heuristic.bind(null,this),new d.players.AlphaBetaPlayer(a)):new w(a)}})},"static randomClassifier":function(a){a=a||this.prototype.random;var b=this.prototype.parameterRanges;f(!b,"Parameter ranges are not defined!");var c=b.map(function(b){return a.random(b.min,b.max)});return new this({parameters:c})}}),v=(o.LinearGameClassifier=e(u,{constructor:function(a){u.call(this,a);var b=a&&a.parameters,c=this.gameModel.featureRanges().length;this.__parameters__=h.range(this.classes.length).map(function(a){return b.slice(a*c,(a+1)*c)}).toArray()},evaluate:function(a,b){var c=this.gameModel.normalizedFeatures(a,b);return g(this.__parameters__).map(function(a,b){var d=h.zip(a,c).mapApply(function(a,b){return a*b}).sum();return[b,d]}).toArray()},"static actionClassifier":function(a){var b=a.featureRanges().length,c=a.actionClasses(),d=b*c.length;return u.actionClassifier(this,a,h.repeat({min:-1,max:1},d).toArray())},"static resultClassifier":function(a,b){var c=a.featureRanges().length,d=b||a.resultClasses(),e=c*d.length;return u.resultClassifier(this,a,h.repeat({min:-1,max:1},e).toArray(),b)}}),o.RuleBasedGameClassifier=e(t,{constructor:function(a){t.call(this,a),this.__rules__=a&&a.rules||[]},rules:function(){return this.__rules__},classify:t.prototype.classify_firstMatch,match_rules:function(a,b,c,d){a=a||this.rules();var e=(this.gameModel.features(c,d),this.classes);return g(a).map(function(a){return a.call(b,features,c,d)},function(a){return e.indexOf(r)>=0}).toArray()},ruleFromValues:function(a,b,c){var d=function(c){return h.zip(c,a).all(function(a){var b=a[0],c=a[1];return"undefined"==typeof b||null===b||b===c})?b:null};return Object.assign(d,c),d}}),p.ActionClassifierPlayer=e(k,{constructor:function(a){k.call(this,a),this.classifier=a.classifier},decision:function(a,b){var c=a.moves()[b],d=this.classifier,e=d.classify(a,b),f=d.gameModel.actionForClass(e,a,b);return c.indexOf(f)>=0?f:d.random.choice(c)}})),w=p.ResultClassifierPlayer=e(l,{constructor:function(a){l.call(this,a),this.classifier=a.classifier},"static heuristic":function(a,b,c){var d=b.resultBounds(),e=1.1*Math.max(Math.abs(d[0]),Math.abs(d[1])),f=a.classes,h=a.normalizedEvaluate(b,c),i=g(h).map(function(a){return f[a[0]]*a[1]}).sum()/e;return i},heuristic:function(a,b){return this.constructor.heuristic(this.classifier,a,b)}});return q.getParametricalGameClassifierOptimizationProblem=function(a){a=a||require("inveniemus");var c=a.Problem,g=(d.players.RandomPlayer,d.tournaments.Measurement),i=e(c,{random:b.Randomness.DEFAULT,objectives:[+(1/0)],precision:10,matchCount:3,constructor:function(a){j(this,a).func("ClassifierType").integer("precision",{coerce:!0,ignore:!0}).integer("matchCount",{coerce:!0,ignore:!0}).array("opponents",{ignore:!0}),this.opponents=this.__initOpponents__(this.opponents);var b=this.precision,d=this.ClassifierType.prototype.parameterRanges;this.ClassifierType.prototype.gameModel.game;c.call(this,Object.assign(a,{title:"Optimization of "+this.ClassifierType,description:"Training method based on inveniemus for "+this.ClassifierType,elementModel:d.map(function(a){return{n:(a.max-a.min)*b+1}})})),this.Element.prototype.emblem=function(){var a=null===this.evaluation?"?":this.evaluation.map(function(a){return Math.round(1e4*a)/1e4}).join(","),b=this.values().map(function(a){return String.fromCharCode((0|a)+19904)}).join("");return"[Element "+a+" "+b+"]"},this.Element.prototype.evaluate=function(){return Future.then(this.problem.evaluation(this),function(a){return this.__evaluationCount__&&(a=(elem.evaluation*(this.__evaluationCount__-1)+a)/this.__evaluationCount__),this.__evaluationCount__=(0|this.__evaluationCount__)+1,elem.evaluation=a,f(null===elem.evaluation,"The evaluation of ",elem," is null!"),elem.evaluation})}},"dual opponentFromString":function(a){if(a=a.toLowerCase(),"random"===a)return new d.players.RandomPlayer({name:"Random"});if(/^mmab\d+$/.test(a)){var b=+a.substr(4);return new d.players.AlphaBetaPlayer({name:"MMαβ("+b+")",horizon:b-1})}if(/^mcts\d+$/.test(a)){var c=+a.substr(4);return new d.players.MonteCarloPlayer({name:"MCTS("+c+")",simulationCount:c,timeCap:+(1/0)})}raise("Unknown opponent '"+a+"'!")},__initOpponents__:function(a){var b=this;return a.map(function(a,c){return"string"==typeof a&&(a=b.opponentFromString(a)),f(!(a&&a instanceof d.Player),"Invalid opponent player #",c,"!"),a})},opponents:["random"],mapping:function(a){var b=this.precision,c=this.ClassifierType.prototype.parameterRanges,d=h.zip(a.values(),c).mapApply(function(a,c){return Math.max(c.min,Math.min(c.max,a/b*(c.max-c.min)+c.min))}).toArray();return new this.ClassifierType({parameters:d})},player:function(a){return a.player({name:"Trainee"})},evaluation:function(a){var b=this.ClassifierType.prototype.gameModel.game,c=this.mapping(a),d=this.player(c),e=new g(b,[d],this.opponents,this.matchCount);return e.run().then(function(){var a=e.statistics;return[(a.count({key:"victories",player:d.name})-a.count({key:"defeats",player:d.name}))/a.count({key:"results",player:d.name})]})},evaluate:function(a){return c.prototype.evaluate.call(this,a,!0)},geneticAlgorithm:function(b){var c=new a.metaheuristics.GeneticAlgorithm(Object.assign({problem:this,mutationRate:.25,size:10,steps:10},b));return c.events.on("advanced",function(a){for(;a.state.length<a.size;)a.state.push(new a.problem.Element)}),c}});return i},m});
//# sourceMappingURL=ludorum-player-ml.min.js.map